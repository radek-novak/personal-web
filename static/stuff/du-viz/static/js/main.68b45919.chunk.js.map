{"version":3,"sources":["components/Breadcrumbs.js","utils/helpers.js","components/PathSizeIndicator.js","components/Segment.js","components/Viz.js","utils/filesizes/getFolderSizes.js","utils/filesizes/dir2tree.js","containers/HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Breadcrumbs","_ref","path","combinedPath","onClick","map","segment","i","slicePath","slice","react","className","key","join","polarToCartesian","_ref2","Object","slicedToArray","cx","cy","polarCoord","Math","cos","angle","distance","sin","mag","_ref3","_ref4","_ref5","_ref6","x","y","sqrt","pow","pathSize","size","concat","pathToStr","filesize","base","pathEl","center","angFrom","angTo","distNear","distFar","p2c","m2c","a","b","c","d","r1","r2","isOverPi","Number","abs","PI","textPath","renderChildren","from","to","level","onHover","segmentChildren","ret","entries","sum","reduce","acc","angleSpan","lastAngle","_i","_entries","length","_ref5$","children","relSize","isNaN","newPath","push","Segment","_ref7","centeredPath","centeredTextPath","textPathId","lastFolder","id","onMouseOver","startOffset","side","href","React","w","h","style","maxHeight","width","data","treeData","initialPath","keys","initObj","initParams","viewBox","components_Segment","assign","BLOCKSIZE","require","execFile","folderSizes","duOutput","re","lines","trim","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_line$match","value","match","_line$match2","foldersize","err","return","order","sort","getSlashesCount","str","curr","assignIn","obj","curPathSect","tail","toArray","dir2tree","inputArg","input","toConsumableArray","el","replace","_match","g1","result","current","filter","cur","_cur","pathArr","Boolean","lensView","lensPath","JSON","parse","stringify","lastKey","keyPath","_Object$keys","HomePage","state","currentPath","viewing","currentTreeData","loading","textareaInput","load","console","time","_folderSizes","timeEnd","_this","setState","handleHover","handleClick","breadClick","onSubmit","e","preventDefault","handleInput","target","_this$state","this","_this$state$viewing","react_default","createElement","Fragment","components_Breadcrumbs","components_Viz","name","rows","cols","placeholder","onChange","type","Component","App","HomePage_HomePage","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68b45919.chunk.js","sourcesContent":["import * as React from 'react';\n\nconst Breadcrumbs = ({ path, combinedPath, onClick }) =>\n  path.map((segment, i) => {\n    const slicePath = combinedPath.slice(0, i + 1);\n\n    return (\n      <button\n        className=\"Bread__btn\"\n        key={i + slicePath.join('^')}\n        onClick={() => onClick(slicePath)}\n      >\n        /{segment}\n      </button>\n    );\n  });\n\nexport default Breadcrumbs;\n","// {a: 1, 'class': 'big'} => 'a=\"1\" class=\"big\"'\nconst obj2param = o =>\n  Object.entries(o).reduce((acc, next) => acc + `${next[0]}=\"${next[1]}\" `, '');\n\nconst polarToCartesian = ([cx, cy]) => polarCoord => [\n  Math.cos(polarCoord.angle) * polarCoord.distance + cx,\n  Math.sin(polarCoord.angle) * polarCoord.distance + cy\n];\nconst mag = ([cx, cy]) => ([x, y]) => Math.sqrt((x - cx) ** 2 + (y - cy) ** 2);\nconst pathToStr = path => `/${path.join('/')}`;\n\nexport { obj2param, polarToCartesian, mag, pathToStr };\n","import { pathToStr } from \"../utils/helpers\";\nimport filesize from \"filesize\";\n\nconst pathSize = ({ path, size }) =>\n  `${pathToStr(path)} - ${filesize(size || 0, {\n    base: 10\n  })}`;\n\nexport default pathSize;\n","import * as React from \"react\";\nimport { polarToCartesian, mag } from \"../utils/helpers\";\n\nconst pathEl = center => (angFrom, angTo, distNear, distFar) => {\n  const p2c = polarToCartesian(center);\n  const m2c = mag(center);\n  const a = p2c({ angle: angFrom, distance: distFar });\n  const b = p2c({ angle: angTo, distance: distFar });\n  const c = p2c({ angle: angTo, distance: distNear });\n  const d = p2c({ angle: angFrom, distance: distNear });\n  const r1 = m2c(a);\n  const r2 = m2c(c);\n  const isOverPi = Number(Math.abs(angFrom - angTo) > Math.PI); // 1 or 0\n  return `\n    M${a[0]},${a[1]}\n    A${r1},${r1},0,${isOverPi},1,${b[0]}, ${b[1]}\n    L${c[0]},${c[1]}\n    A${r2},${r2},0,${isOverPi},0,${d[0]},${d[1]}\n    Z\n    `;\n};\nconst textPath = center => (angFrom, angTo, distFar) => {\n  const p2c = polarToCartesian(center);\n  const m2c = mag(center);\n  const a = p2c({ angle: angFrom, distance: distFar });\n  const b = p2c({ angle: angTo, distance: distFar });\n  const r1 = m2c(a);\n  const isOverPi = Number(Math.abs(angFrom - angTo) > Math.PI); // 1 or 0\n  return `\n    M${a[0]},${a[1]}\n    A${r1},${r1},0,${isOverPi},1,${b[0]}, ${b[1]}\n    `;\n};\n\nconst renderChildren = ({\n  from,\n  to,\n  level,\n  path,\n  onHover,\n  onClick,\n  center,\n  segmentChildren\n}) => {\n  if (!segmentChildren) return [];\n\n  const ret = [];\n  const entries = Object.entries(segmentChildren);\n  const sum = entries.reduce((acc, [key, value]) => value.size + acc, 0);\n\n  const angleSpan = to - from;\n  let lastAngle = from;\n\n  for (let [key, { size, children }] of entries) {\n    const relSize = (angleSpan * size) / sum;\n\n    if (typeof relSize !== \"number\" || isNaN(relSize)) continue;\n    const newPath = path.concat(key);\n\n    ret.push(\n      <Segment\n        key={newPath.join(\"/\")}\n        from={lastAngle}\n        to={lastAngle + relSize}\n        path={newPath}\n        size={size}\n        level={level + 1}\n        center={center}\n        onHover={onHover}\n        onClick={onClick}\n        segmentChildren={children}\n      />\n    );\n    lastAngle += relSize;\n  }\n\n  return ret;\n};\n\nfunction Segment({\n  from,\n  to,\n  level,\n  path,\n  onHover,\n  onClick,\n  size,\n  center,\n  segmentChildren\n}) {\n  const centeredPath = pathEl(center);\n  const centeredTextPath = textPath(center);\n  const textPathId = path.join(\"/\");\n  const lastFolder = path[path.length - 1];\n\n  return (\n    <>\n      <defs>\n        <path id={textPathId} d={centeredTextPath(from, to, 50 * level + 25)} />\n      </defs>\n\n      <path\n        d={centeredPath(from, to, 50 * level + 5, 50 * (level + 1))}\n        className=\"Segment__path\"\n        onMouseOver={() => onHover({ size, path })}\n        onClick={() => onClick({ size, path })}\n      />\n      <text className=\"u-noPointerEv\">\n        <textPath startOffset=\"10\" side=\"right\" href={\"#\" + textPathId}>\n          {lastFolder}\n        </textPath>\n      </text>\n      {renderChildren({\n        from,\n        to,\n        level,\n        onHover,\n        onClick,\n        center,\n        path,\n        segmentChildren\n      })}\n    </>\n  );\n}\n\nexport default React.memo(Segment);\n","// @flow\nimport * as React from 'react';\nimport Segment from './Segment';\n\nconst size = { w: 600, h: 600 };\nconst style = { maxHeight: '100vh', width: '100%' };\n\nfunction Viz({ data, onHover, onClick }) {\n  if (!data) return null;\n  const treeData = data;\n  const center = [size.w / 2, size.h / 2];\n  const initialPath = Object.keys(treeData)[0];\n  const initObj = treeData[initialPath];\n  const initParams = {\n    from: -Math.PI / 2,\n    to: -Math.PI / 2 + 2 * Math.PI - 0.000001,\n    level: 0,\n    center\n  };\n  return (\n    <svg style={style} viewBox={`0 0 ${size.w} ${size.h}`}>\n      <Segment\n        {...initParams}\n        path={[initialPath]}\n        segmentChildren={initObj.children}\n        onHover={onHover}\n        onClick={onClick}\n      />\n    </svg>\n  );\n}\n\nexport default React.memo(Viz);\n","const { execFile } = require(\"child_process\");\n\n// default blocksize on macos\nconst BLOCKSIZE = 512;\n\nfunction folderSizes(duOutput) {\n  const re = /^(\\d+?)\\t(.+?)$/;\n  const lines = duOutput.trim().split(\"\\n\");\n  const map = {};\n  for (let line of lines) {\n    const [, foldersize, folderpath] = line.match(re);\n    map[folderpath] = Number(foldersize) * BLOCKSIZE;\n  }\n  return map;\n}\n\nconst order = map => Object.entries(map).sort((a, b) => b[1] - a[1]);\n\nconst _getFolderSizes = (path, depth) =>\n  new Promise((resolve, reject) => {\n    execFile(\n      \"du\",\n      [\"-d\", depth.toString(), path],\n      { env: { BLOCKSIZE } }, // ensure default blocksize\n      (error, stdout, stderr) => {\n        if (error) {\n          console.error(error);\n          if (!stdout) reject(error);\n        }\n\n        if (stderr) {\n          console.error(\"stderr\", stderr);\n        }\n\n        resolve(order(folderSizes(stdout)));\n      }\n    );\n  });\n\nconst getFolderSizes = (path, depth, useCache = true) => {\n  const storageKey = `${depth}\\\\${path}`;\n  const data = localStorage.getItem(storageKey, `${depth}/${path}`);\n  if (data && useCache) {\n    return Promise.resolve(JSON.parse(data));\n  } else {\n    return _getFolderSizes(path, depth).then(data => {\n      localStorage.setItem(storageKey, JSON.stringify(data));\n      return data;\n    });\n  }\n};\n\nexport { order, folderSizes, getFolderSizes };\n","const getSlashesCount = str =>\n  str.split(\"\").reduce((acc, curr) => (curr === \"/\" ? acc + 1 : acc), 0);\n\nconst assignIn = (obj, path, size) => {\n  const curPathSect = path[0];\n  const [, ...tail] = path;\n\n  if (curPathSect in obj) {\n    obj[curPathSect].children = obj[curPathSect].children || {};\n\n    if (path.length === 1) {\n      obj.children[curPathSect] = { size };\n    } else {\n      assignIn(obj[curPathSect].children, tail, size);\n    }\n  } else {\n    if (path.length === 1) {\n      obj[curPathSect] = { size };\n    } else {\n      obj[curPathSect] = {\n        size: 1,\n        children: {}\n      };\n      assignIn(obj[curPathSect].children, tail, size);\n    }\n  }\n};\n\nconst dir2tree = inputArg => {\n  let input = [...inputArg];\n  // rm trailing slash\n  input = input.map(el => [\n    el[0].replace(/^(.+?)\\/$/, (_match, g1) => g1),\n    el[1]\n  ]);\n\n  const result = {};\n\n  let level = 1;\n  while (input.length) {\n    // eslint-disable-next-line\n    const current = input.filter(([path]) => getSlashesCount(path) === level);\n\n    for (let cur of current) {\n      const [path, size] = cur;\n      const pathArr = path.split(\"/\").filter(Boolean);\n      assignIn(result, pathArr, size);\n    }\n    // eslint-disable-next-line\n    input = input.filter(([path]) => getSlashesCount(path) !== level);\n    level++;\n  }\n\n  return result;\n};\n\nexport default dir2tree;\nexport { assignIn };\n","import React, { Component } from \"react\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport pathSize from \"../components/PathSizeIndicator\";\nimport Viz from \"../components/Viz\";\nimport { order, folderSizes } from \"../utils/filesizes/getFolderSizes\";\nimport dir2tree from \"../utils/filesizes/dir2tree\";\n\n// { a: { b: 1, c: 2, d: {dd: 22}}}, ['a, 'd'] => {d: {dd: 22}}\nconst lensView = (obj: Tree, lensPath: string[]) => {\n  let current = JSON.parse(JSON.stringify(obj));\n  const lastKey = lensPath[lensPath.length - 1];\n  const keyPath = lensPath.slice(0, -1);\n  for (let key of keyPath) {\n    current = current[key].children;\n  }\n\n  for (let key of Object.keys(current)) {\n    if (key !== lastKey) delete current[key];\n  }\n\n  return current;\n};\n\ntype Tree = { [key: string]: Tree };\ntype Path = string[];\ntype Size = any;\ntype HandleEvent = {\n  path: Path;\n  size?: Size;\n};\n\nexport default class HomePage extends Component {\n  state = {\n    currentPath: [],\n    viewing: { path: null, size: 0 },\n    currentTreeData: null,\n    treeData: null,\n    loading: true,\n    textareaInput: null\n  };\n\n  load = (duOutput: string) => {\n    console.time();\n    const _folderSizes = order(folderSizes(duOutput));\n\n    const treeData = dir2tree(_folderSizes) as Tree;\n    console.timeEnd();\n    const currentPath = _folderSizes[1][0].split(\"/\").filter(Boolean);\n\n    this.setState({\n      currentPath,\n      treeData,\n      currentTreeData: lensView(treeData, currentPath),\n      loading: false\n    });\n  };\n\n  handleHover = ({ size, path }: HandleEvent) => {\n    this.setState({\n      viewing: {\n        size,\n        path\n      }\n    });\n  };\n\n  handleClick = ({ path, size }: HandleEvent) => {\n    const { treeData } = this.state;\n    if (!treeData) return;\n\n    const currentPath = [...this.state.currentPath.slice(0, -1), ...path];\n    this.setState({\n      currentPath,\n      currentTreeData: lensView(treeData || {}, currentPath)\n    });\n  };\n\n  breadClick = (path: Path) => {\n    const { treeData } = this.state;\n    if (!treeData) return;\n\n    this.setState({\n      currentPath: path,\n      currentTreeData: lensView(treeData || {}, path)\n    });\n  };\n\n  onSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    this.load(this.state.textareaInput || \"\");\n  };\n\n  handleInput = (e: any) => {\n    this.setState({\n      textareaInput: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      viewing: { path, size },\n      loading,\n      currentTreeData,\n      currentPath\n    } = this.state;\n\n    const combinedPath = currentPath.slice(0, -1).concat(path || []);\n\n    return (\n      <>\n        {currentTreeData ? (\n          <div className=\"layout\">\n            <div className=\"TopBar\">\n              {loading ? (\n                \"Loading...\"\n              ) : (\n                <Breadcrumbs\n                  combinedPath={combinedPath}\n                  path={currentPath}\n                  onClick={this.breadClick}\n                />\n              )}\n            </div>\n            <Viz\n              data={currentTreeData}\n              onHover={this.handleHover}\n              onClick={this.handleClick}\n            />\n            <div className=\"BottomBar\">\n              {pathSize({ path: combinedPath, size })}\n            </div>\n          </div>\n        ) : (\n          <div className=\"inputScreen\">\n            <p>\n              Run <pre className=\"u-inline\">du</pre> command\n              <small>\n                <i>(expecting block size 512)</i>\n              </small>\n              <code>\n                <pre>du -d 3 | pbcopy</pre>\n              </code>\n              and paste the output in the textarea\n            </p>\n            <form onSubmit={this.onSubmit}>\n              <textarea\n                name=\"data\"\n                rows={20}\n                cols={20}\n                placeholder=\"Paste the output of `du` here\"\n                onChange={this.handleInput}\n              />\n              <button type=\"submit\">Visualize</button>\n            </form>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport HomePage from \"./containers/HomePage\";\nconst App: React.FC = () => {\n  return <HomePage />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}